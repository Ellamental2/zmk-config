/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <locale/keys_en_gb_extended.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    macros {
        gte: gte {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp EQUAL>;
            label = "GTE";
        };

        lte: lte {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp EQUAL>;
            label = "LTE";
        };

        and: and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AMPS &kp AMPS>;
            label = "AND";
        };

        or: or {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp PIPE>;
            label = "OR";
        };

        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(KP_NUMBER_0) &kp LA(KP_NUMBER_1) &kp LA(KP_NUMBER_2) &kp LA(KP_NUMBER_8)>;
            label = "EURO";
        };

        gb_pound: gb_pound {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(KP_NUMBER_0) &kp LA(KP_NUMBER_1) &kp LA(KP_NUMBER_6) &kp LA(KP_NUMBER_3)>;
            label = "GB_POUND";
        };
    };

    combos {
        compatible = "zmk,combos";

        Semi-colon {
            bindings = <&kp SEMICOLON>;
            key-positions = <27 28>;
            layers = <0>;
        };

        lte {
            bindings = <&lte>;
            key-positions = <27 29>;
            layers = <0>;
        };

        gte {
            bindings = <&gte>;
            key-positions = <28 29>;
            layers = <0>;
        };

        Euro {
            bindings = <&euro>;
            key-positions = <2 3>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ColemakDH {
            label = "DEF";
            bindings = <
  &kp Q  &kp W  &kp F             &kp P               &kp B        &kp J            &kp L   &kp U      &kp O                   &kp BACKSPACE
  &kp A  &kp R  &kp S             &kp T               &kp G        &kp M            &kp N   &kp E      &kp I                   &kp O
  &kp Z  &kp X  &kp C             &kp D               &kp V        &kp K            &kp H   &kp COMMA  &mt EXCLAMATION PERIOD  &kp EQUAL
                &mt DEL LEFT_WIN  &mt LEFT_SHIFT TAB  &kp ENTER    &mt LCTRL SPACE  &trans  &sl 1
            >;
        };

        Symbols {
            bindings = <
  &mt C_QUIT ESCAPE  &kp AT        &gb_pound       &kp DOLLAR         &kp PERCENT    &kp AMPERSAND       &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
  &kp TAB            &kp HASH      &kp APOSTROPHE  &kp DOUBLE_QUOTES  &kp GRAVE      &mt HOME BACKSLASH  &kp SLASH      &kp LEFT_BRACE        &mt END RIGHT_BRACE    &kp EXCLAMATION
  &kp TILDE          &kp QUESTION  &kp PIPE        &kp UNDERSCORE     &kp CARET      &kp MINUS           &kp PLUS       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &sl 3
                                   &sl 0           &kp LEFT_SHIFT     &kp ENTER      &kp SPACE           &kp RIGHT_ALT  &sl 2
            >;
        };

        layer_2 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &sl 3
                  &sl 0   &trans  &trans    &trans  &trans  &sl 1
            >;
        };

        layer_3 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &sl 2
                  &sl 0   &trans  &trans    &trans  &trans  &sl 1
            >;
        };

        layer_4 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &sl 0   &trans  &trans    &trans  &trans  &sl 1
            >;
        };

        layer_5 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &sl 0   &trans  &trans    &trans  &trans  &sl 1
            >;
        };

        layer_6 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &sl 0   &trans  &trans    &trans  &trans  &sl 1
            >;
        };

        layer_7 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &sl 0   &trans  &trans    &trans  &trans  &sl 1
            >;
        };
    };
};
