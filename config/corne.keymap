/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <locale/keys_en_gb_extended.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT_L 0

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    macros {
        gte: gte {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp EQUAL>;
            label = "GTE";
        };

        lte: lte {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp EQUAL>;
            label = "LTE";
        };

        and: and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AMPS &kp AMPS>;
            label = "AND";
        };

        or: or {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp PIPE>;
            label = "OR";
        };

        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(KP_NUMBER_0) &kp LA(KP_NUMBER_1) &kp LA(KP_NUMBER_2) &kp LA(KP_NUMBER_8)>;
            label = "EURO";
        };

        gb_pound: gb_pound {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(KP_NUMBER_0) &kp LA(KP_NUMBER_1) &kp LA(KP_NUMBER_6) &kp LA(KP_NUMBER_3)>;
            label = "GB_POUND";
        };

        task_manager: task_manager {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(ESCAPE))>;
            label = "TASK_MANAGER";
        };
    };

    combos {
        compatible = "zmk,combos";

        Semi-colon {
            bindings = <&kp SEMICOLON>;
            key-positions = <27 28>;
            layers = <0>;
        };

        lte {
            bindings = <&lte>;
            key-positions = <27 29>;
            layers = <0>;
        };

        gte {
            bindings = <&gte>;
            key-positions = <28 29>;
            layers = <0>;
        };

        Euro {
            bindings = <&euro>;
            key-positions = <2 3>;
            layers = <1>;
        };

        ctrl+alt+del {
            bindings = <&kp LA(LC(DELETE))>;
            key-positions = <33 34 9>;
        };

        lock {
            bindings = <&kp K_LOCK>;
            key-positions = <32 33>;
        };

        f1 {
            bindings = <&kp F1>;
            key-positions = <2 5 31>;
            layers = <0>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <2 6 31>;
            layers = <0>;
        };

        f3 {
            bindings = <&kp F3>;
            key-positions = <2 7 31>;
            layers = <0>;
        };

        f4 {
            bindings = <&kp F4>;
            key-positions = <2 8 31>;
            layers = <0>;
        };

        f5 {
            bindings = <&kp F5>;
            key-positions = <2 15 31>;
            layers = <0>;
        };

        f6 {
            bindings = <&kp F6>;
            key-positions = <2 16 31>;
            layers = <0>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <2 17 31>;
            layers = <0>;
        };

        f8 {
            bindings = <&kp F8>;
            key-positions = <2 18 31>;
            layers = <0>;
        };

        f9 {
            bindings = <&kp F9>;
            key-positions = <2 25 31>;
            layers = <0>;
        };

        f10 {
            bindings = <&kp F10>;
            key-positions = <2 26 31>;
            layers = <0>;
        };

        f11 {
            bindings = <&kp F11>;
            key-positions = <2 27 31>;
            layers = <0>;
        };

        f12 {
            bindings = <&kp F12>;
            key-positions = <2 28 31>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ColemakDH {
            label = "DEF";
            bindings = <
  &kp Q  &kp W  &kp F         &kp P               &kp B        &kp J            &kp L          &kp U      &kp O                   &kp BACKSPACE
  &kp A  &kp R  &kp S         &kp T               &kp G        &kp M            &kp N          &kp E      &kp I                   &kp O
  &kp Z  &kp X  &kp C         &kp D               &kp V        &kp K            &kp H          &kp COMMA  &mt EXCLAMATION PERIOD  &kp EQUAL
                &kp LEFT_WIN  &mt LEFT_SHIFT TAB  &kp ENTER    &mt LCTRL SPACE  &kp RIGHT_ALT  &to 1
            >;
        };

        Symbols {
            bindings = <
  &mt C_QUIT ESCAPE  &kp AT        &gb_pound       &kp DOLLAR         &kp PERCENT    &kp AMPERSAND       &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
  &kp TAB            &kp HASH      &kp APOSTROPHE  &kp DOUBLE_QUOTES  &kp GRAVE      &mt HOME BACKSLASH  &kp SLASH      &kp LEFT_BRACE        &mt END RIGHT_BRACE    &kp EXCLAMATION
  &kp TILDE          &kp QUESTION  &kp PIPE        &kp UNDERSCORE     &kp CARET      &kp MINUS           &kp PLUS       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &to 3
                                   &to 0           &kp LEFT_SHIFT     &kp ENTER      &kp SPACE           &kp RIGHT_ALT  &to 2
            >;
        };

        Numbers {
            bindings = <
  &kp ESC  &kp K_PLAY_PAUSE  &kp K_PREV            &kp K_NEXT            &kp UNDERSCORE    &kp N7     &kp N8    &kp N9  &kp N0     &kp BACKSPACE
  &kp TAB  &kp K_MUTE        &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp PLUS          &kp N4     &kp N5    &kp N6  &kp DOT    &kp MINUS
  &trans   &kp ASTERISK      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp MINUS         &kp N1     &kp N2    &kp N3  &kp EQUAL  &to 3
                             &to 0                 &kp LSHFT             &kp KP_ENTER      &kp SPACE  &kp RALT  &to 1
            >;
        };

        Navigation {
            bindings = <
  &kp ESCAPE  &trans          &trans          &trans           &trans              &kp PRINTSCREEN  &trans          &trans    &trans     &kp BACKSPACE
  &kp TAB     &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &msc SCROLL_UP      &trans           &kp LEFT_ARROW  &kp UP    &kp RIGHT  &trans
  &trans      &trans          &mmv MOVE_DOWN  &mkp RCLK        &msc SCROLL_DOWN    &trans           &kp HOME        &kp DOWN  &kp END    &to 2
                              &to 0           &kp LCTRL        &kp ENTER           &mkp LCLK        &kp LEFT_ALT    &to 1
            >;
        };

        blank {
            bindings = <
  &trans  &trans  &trans  &trans  &trans       &trans     &trans  &trans  &trans  &kp BACKSPACE
  &trans  &trans  &trans  &trans  &trans       &trans     &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans       &trans     &trans  &trans  &trans  &to 2
                  &to 0   &trans  &kp ENTER    &kp SPACE  &trans  &to 1
            >;
        };
    };
};
